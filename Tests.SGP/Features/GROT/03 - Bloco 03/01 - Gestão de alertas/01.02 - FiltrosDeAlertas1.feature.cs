// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.SGP.Features.GROT._03_Bloco03._01_GestaoDeAlertas
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("03.01.02 - Fitro de alertas", new string[] {
            "kill_Driver"}, Description="Narrativa:\r\n\tEu como Adminstrador do sistema\r\n\tQuero acessar gestao de alertas\r\n\t" +
        "Para gerenciar os alertas que deveram aparecer no calculo do GROT", SourceFile="Features\\GROT\\03 - Bloco 03\\01 - Gestão de alertas\\01.02 - FiltrosDeAlertas.featu" +
        "re", SourceLine=7)]
    public partial class _03_01_02_FitroDeAlertasFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "01.02 - FiltrosDeAlertas.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "03.01.02 - Fitro de alertas", "Narrativa:\r\n\tEu como Adminstrador do sistema\r\n\tQuero acessar gestao de alertas\r\n\t" +
                    "Para gerenciar os alertas que deveram aparecer no calculo do GROT", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 15
#line 16
 testRunner.Given("que eu navegue para a Tela de Login do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 17
 testRunner.And("efetuar o login no sistema do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 18
 testRunner.And("que eu navegue para a Tela Home com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 19
 testRunner.And("que esteja na Tela Gestao de Alertas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02 - Selecionar mais de um alerta", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=21)]
        public virtual void _02_SelecionarMaisDeUmAlerta()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Selecionar mais de um alerta", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "logout"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 23
 testRunner.When("eu seleciono mais de um alerta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 24
 testRunner.Then("eu visualizo alertas selecionados com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03 - Selecionar checkbox para selecionar todos os alertas", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=26)]
        public virtual void _03_SelecionarCheckboxParaSelecionarTodosOsAlertas()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Selecionar checkbox para selecionar todos os alertas", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "logout"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 28
 testRunner.When("eu seleciono opcao todos os alertas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 29
 testRunner.Then("eu visualizo todos os alertas selecionados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05 - Selecionar dois alertas e depois clicar em selecionar todos os alertas", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=31)]
        public virtual void _05_SelecionarDoisAlertasEDepoisClicarEmSelecionarTodosOsAlertas()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - Selecionar dois alertas e depois clicar em selecionar todos os alertas", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "logout"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 33
 testRunner.When("eu seleciono dois alertas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 34
 testRunner.And("depois seleciono todos os alertas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 35
 testRunner.Then("eu visualizo todos os alertas marcados com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("09 - Filtrar nome valido", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=37)]
        public virtual void _09_FiltrarNomeValido()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09 - Filtrar nome valido", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "logout"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 39
 testRunner.When("que faca um filtro por alerta de antecedencia minima", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 40
 testRunner.Then("visualizo o filtro por antecedencia minima com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("12 - Selecionar checkbox itens selecionados", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=42)]
        public virtual void _12_SelecionarCheckboxItensSelecionados()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12 - Selecionar checkbox itens selecionados", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "logout"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 44
 testRunner.When("faco filtro por itens selecionados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 45
 testRunner.Then("eu visualizo todos os alertas selecionados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("13 - Selecionar checkbox itens nao selecionados", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=47)]
        public virtual void _13_SelecionarCheckboxItensNaoSelecionados()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13 - Selecionar checkbox itens nao selecionados", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "logout"});
#line 48
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 49
 testRunner.Given("que desmarco dois alertas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 50
 testRunner.When("faco filtro por itens nao selecionados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 51
 testRunner.Then("eu visualizo todos os alertas nao selecionados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("14 - Exibir lista de sugestão no campo Nome", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=53)]
        public virtual void _14_ExibirListaDeSugestaoNoCampoNome()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14 - Exibir lista de sugestão no campo Nome", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "logout"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 55
 testRunner.When("clico na lista de alertas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 56
 testRunner.Then("escrevo nome pausadamente para exibir lista de sugestao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("19 - Filtrar nome com numeros", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=58)]
        public virtual void _19_FiltrarNomeComNumeros()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("19 - Filtrar nome com numeros", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "logout"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 60
 testRunner.When("clico na lista de alertas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 61
 testRunner.Then("escrevo nome com numeros na lista de sugestao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("20 - Filtrar e fechar campo", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=63)]
        public virtual void _20_FiltrarEFecharCampo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("20 - Filtrar e fechar campo", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "logout"});
#line 64
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 65
 testRunner.When("clico na lista de alertas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 66
 testRunner.And("filtro nome valido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 67
 testRunner.Then("clico no botao fechar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("21 - Filtrar alertas semanais - Jornada e Indisponibilidade", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=69)]
        public virtual void _21_FiltrarAlertasSemanais_JornadaEIndisponibilidade()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("21 - Filtrar alertas semanais - Jornada e Indisponibilidade", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "selecionarTodosAlertas",
                        "logout"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 71
 testRunner.When("desmarco todos os alertas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 72
 testRunner.And("seleciono alertas Jornada e Indisponibilidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 73
 testRunner.And("acesso planejamento de roteiro semanal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 74
 testRunner.Then("visualizo alertas semanal com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("22 - Filtrar alertas diarios - Iluminação e Jornada de frente", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=76)]
        public virtual void _22_FiltrarAlertasDiarios_IluminacaoEJornadaDeFrente()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22 - Filtrar alertas diarios - Iluminação e Jornada de frente", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 77
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 78
 testRunner.When("desmarco todos os alertas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 79
 testRunner.And("seleciono alertas Iluminacao e JornadaFrete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 80
 testRunner.And("acesso planejamento de roteiro diario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 81
 testRunner.Then("visualizado alertas diarios com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("24 - Filtrar - Selecionar todos os alertas", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=83)]
        public virtual void _24_Filtrar_SelecionarTodosOsAlertas()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("24 - Filtrar - Selecionar todos os alertas", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 84
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 85
 testRunner.When("eu seleciono opcao todos os alertas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 86
 testRunner.And("acesso planejamento de roteiro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 87
 testRunner.Then("visualizado alertas selecionados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("28 - Modificar programação na tela de gestão de alertas", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=89)]
        public virtual void _28_ModificarProgramacaoNaTelaDeGestaoDeAlertas()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("28 - Modificar programação na tela de gestão de alertas", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "logout"});
#line 90
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 91
 testRunner.Then("modifico a programacao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("29 - Exibir campos selecionados alterando programacao", new string[] {
                "chrome",
                "selecionarTodosAlertas",
                "logout"}, SourceLine=93)]
        public virtual void _29_ExibirCamposSelecionadosAlterandoProgramacao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("29 - Exibir campos selecionados alterando programacao", new string[] {
                        "chrome",
                        "selecionarTodosAlertas",
                        "logout"});
#line 94
this.ScenarioSetup(scenarioInfo);
#line 15
this.FeatureBackground();
#line 95
 testRunner.When("seleciono um alerta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 96
 testRunner.And("seleciono outra programacao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 97
 testRunner.And("valido se alertas selecionados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 98
 testRunner.And("seleciono uma programacao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 99
 testRunner.Then("valido se alerta selecionado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
