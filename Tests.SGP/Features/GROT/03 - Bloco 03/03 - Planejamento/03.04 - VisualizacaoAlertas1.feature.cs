// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.SGP.Features.GROT._03_Bloco03._03_Planejamento
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("03.03.04 - Visualizacao de Alertas", new string[] {
            "kill_Driver"}, Description="Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar um novo Capítulo no SG" +
        "P\r\n\tPara ter controle dos Capítulos e Cenas que serão roterizados", SourceFile="Features\\GROT\\03 - Bloco 03\\03 - Planejamento\\03.04 - VisualizacaoAlertas.feature" +
        "", SourceLine=6)]
    public partial class _03_03_04_VisualizacaoDeAlertasFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "03.04 - VisualizacaoAlertas.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "03.03.04 - Visualizacao de Alertas", "Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar um novo Capítulo no SG" +
                    "P\r\n\tPara ter controle dos Capítulos e Cenas que serão roterizados", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 14
#line 15
 testRunner.Given("que eu navegue para a Tela de Login do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 16
 testRunner.And("efetuar o login no sistema do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 17
 testRunner.And("que eu navegue para a Tela Home com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 18
 testRunner.And("que eu navegue para a Tela Capitulos e Cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("16 - Visualizar alerta de MQE com sucesso", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=30)]
        public virtual void _16_VisualizarAlertaDeMQEComSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16 - Visualizar alerta de MQE com sucesso", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 32
 testRunner.When("eu criar um roteiro com duas cenas de estudio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 33
 testRunner.Then("eu visualizo alerta de MQE com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("26 - Validar alerta - por iluminação - Estúdio - sem alerta", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=35)]
        public virtual void _26_ValidarAlerta_PorIluminacao_Estudio_SemAlerta()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("26 - Validar alerta - por iluminação - Estúdio - sem alerta", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 37
 testRunner.When("eu criar um roteiro com cena de estudio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 38
 testRunner.Then("eu nao visualizo alerta de iluminacao com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("27 - Visualização de Alertas - Validar alerta - por faixa de horário de gravação " +
            "(noturno) - Estúdio", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=40)]
        public virtual void _27_VisualizacaoDeAlertas_ValidarAlerta_PorFaixaDeHorarioDeGravacaoNoturno_Estudio()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("27 - Visualização de Alertas - Validar alerta - por faixa de horário de gravação " +
                    "(noturno) - Estúdio", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 42
 testRunner.When("eu criar um roteiro com cena de estudio noturna fora da faixa de horario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 43
 testRunner.Then("eu nao visualizo alerta de faixa de horario de gravacao com sucesso - estudio not" +
                    "urno", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("29 - Visualizar alerta de jornada da frente com sucesso - estudio", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=45)]
        public virtual void _29_VisualizarAlertaDeJornadaDaFrenteComSucesso_Estudio()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("29 - Visualizar alerta de jornada da frente com sucesso - estudio", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 47
 testRunner.When("eu criar um roteiro com duas cenas de estudio que ultrapasse a jornada da frente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 48
 testRunner.Then("eu visualizo alerta de jornada da frente com sucesso - estudio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("30 - Visualizar alerta de tempo de preparacao de elenco com sucesso - estudio", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=50)]
        public virtual void _30_VisualizarAlertaDeTempoDePreparacaoDeElencoComSucesso_Estudio()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30 - Visualizar alerta de tempo de preparacao de elenco com sucesso - estudio", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 51
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 52
 testRunner.When("eu criar um roteiro com cenas de estudio e com chegada do ator apos o inicio da g" +
                    "ravacao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 53
 testRunner.Then("eu visualizo alerta de tempo de preparacao de elenco com sucesso - estudio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("31 - Visualizar alerta de tempo de preparacao de elenco com sucesso - cidade ceno" +
            "grafica", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=55)]
        public virtual void _31_VisualizarAlertaDeTempoDePreparacaoDeElencoComSucesso_CidadeCenografica()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31 - Visualizar alerta de tempo de preparacao de elenco com sucesso - cidade ceno" +
                    "grafica", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 56
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 57
 testRunner.When("eu criar um roteiro com cena de cidade cenografica e com chegada do ator apos o i" +
                    "nicio da gravacao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 58
 testRunner.Then("eu visualizo alerta de tempo de preparacao de elenco com sucesso - cidade cenogra" +
                    "fica", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("32 - Visualizar alerta de tempo de preparacao de elenco com sucesso - externa", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=60)]
        public virtual void _32_VisualizarAlertaDeTempoDePreparacaoDeElencoComSucesso_Externa()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32 - Visualizar alerta de tempo de preparacao de elenco com sucesso - externa", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 61
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 62
 testRunner.When("eu criar um roteiro com cena externa e com chegada do ator apos o inicio da grava" +
                    "cao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 63
 testRunner.Then("eu visualizo alerta de tempo de preparacao de elenco com sucesso - externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("36 - Visualização de Alertas - Validar alerta - por faixa de horário de gravação " +
            "(diurno)", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=65)]
        public virtual void _36_VisualizacaoDeAlertas_ValidarAlerta_PorFaixaDeHorarioDeGravacaoDiurno()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("36 - Visualização de Alertas - Validar alerta - por faixa de horário de gravação " +
                    "(diurno)", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 66
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 67
 testRunner.When("eu criar um roteiro com cena diurna fora da faixa de horario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 68
 testRunner.Then("eu visualizo alerta de faixa de horario de gravacao com sucesso - diurno", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("37 - Visualizar alerta de faixa de horario de gravacao com sucesso - noturno", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=70)]
        public virtual void _37_VisualizarAlertaDeFaixaDeHorarioDeGravacaoComSucesso_Noturno()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("37 - Visualizar alerta de faixa de horario de gravacao com sucesso - noturno", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 71
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 72
 testRunner.When("eu criar um roteiro com cena noturna fora da faixa de horario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 73
 testRunner.Then("eu visualizo alerta de faixa de horario de gravacao com sucesso - noturno", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("38 - Validar sumarização de alertas por tipo", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=75)]
        public virtual void _38_ValidarSumarizacaoDeAlertasPorTipo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38 - Validar sumarização de alertas por tipo", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 76
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 77
 testRunner.When("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 78
 testRunner.Then("eu visualizo a sumarizacao de alertas por tipo com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("40 - Validar alertas com maior incidência - Exibição de 3 alertas", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=80)]
        public virtual void _40_ValidarAlertasComMaiorIncidencia_ExibicaoDe3Alertas()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40 - Validar alertas com maior incidência - Exibição de 3 alertas", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 81
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 82
 testRunner.When("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 83
 testRunner.Then("eu visualizo os tres alertas com maior incidencia com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("41 - Validar alertas com maior incidência - Exibição de mais de 3 alertas", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=85)]
        public virtual void _41_ValidarAlertasComMaiorIncidencia_ExibicaoDeMaisDe3Alertas()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("41 - Validar alertas com maior incidência - Exibição de mais de 3 alertas", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 86
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 87
 testRunner.When("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 88
 testRunner.Then("eu visualizo os demais alertas com maior incidencia com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("42 - Validar alerta - por horário de elenco", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=90)]
        public virtual void _42_ValidarAlerta_PorHorarioDeElenco()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("42 - Validar alerta - por horário de elenco", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 91
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 92
 testRunner.When("eu criar um roteiro em cada frente no mesmo dia", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 93
 testRunner.Then("eu visualizo alerta de conflito de horario de elenco com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("43 - Filtro de alertas - alterar sumarização de alertas por frente: TODAS", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=95)]
        public virtual void _43_FiltroDeAlertas_AlterarSumarizacaoDeAlertasPorFrenteTODAS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("43 - Filtro de alertas - alterar sumarização de alertas por frente: TODAS", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 96
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 97
 testRunner.When("eu criar um roteiro em cada frente no mesmo dia", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 98
 testRunner.And("filtrar a frente por TODAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 99
 testRunner.Then("eu visualizo a sumarizacao de alertas de todas as frentes com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("44 - Filtro de alertas - alterar sumarização de alertas por frente: MAIS DE UMA", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=101)]
        public virtual void _44_FiltroDeAlertas_AlterarSumarizacaoDeAlertasPorFrenteMAISDEUMA()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44 - Filtro de alertas - alterar sumarização de alertas por frente: MAIS DE UMA", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 102
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 103
 testRunner.When("eu criar um roteiro em cada frente no mesmo dia", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 104
 testRunner.And("alterar o filtro entre uma frente e outra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 105
 testRunner.Then("eu visualizo a sumarizacao de alertas de todas as frentes com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("45 - Visualização de Alertas - Alerta vai e vem pelo roteiro", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=107)]
        public virtual void _45_VisualizacaoDeAlertas_AlertaVaiEVemPeloRoteiro()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("45 - Visualização de Alertas - Alerta vai e vem pelo roteiro", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 108
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 109
 testRunner.When("eu criar um roteiro em cada frente no mesmo dia", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 110
 testRunner.And("clicar no icone vai e vem dos dois roteiros", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 111
 testRunner.Then("eu visualizo o pop up com as informacoes de cada roteiro com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("46 - Visualização de Alertas - Criar conflito de roteiro", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=113)]
        public virtual void _46_VisualizacaoDeAlertas_CriarConflitoDeRoteiro()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("46 - Visualização de Alertas - Criar conflito de roteiro", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 114
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 115
 testRunner.Given("que eu salvo um rascunho de roteiro com tres cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 116
 testRunner.When("eu abro o rascunho e arrasto uma cena para outro dia da frente e salvo como outro" +
                    " rascunho", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 117
 testRunner.And("eu abro o primeiro rascunho e libero o roteiro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 118
 testRunner.And("eu abro o segundo rascunho e libero o roteiro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 119
 testRunner.Then("eu visualizo o alerta de conflito de roteiros", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("47 - Visualizar alerta de tempo de caracterizacao do elenco com sucesso", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=121)]
        public virtual void _47_VisualizarAlertaDeTempoDeCaracterizacaoDoElencoComSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("47 - Visualizar alerta de tempo de caracterizacao do elenco com sucesso", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 122
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 123
 testRunner.When("eu preencher os horarios de um roteiro para alerta de tempo de caracterizacao de " +
                    "elenco", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 124
 testRunner.Then("eu visualizo alerta de tempo de caracterizacao do elenco com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("48 - Validar alerta - por tempo de preparação alteração no personagem", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=126)]
        public virtual void _48_ValidarAlerta_PorTempoDePreparacaoAlteracaoNoPersonagem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48 - Validar alerta - por tempo de preparação alteração no personagem", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 127
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 128
 testRunner.When("eu criar um roteiro com cenas de estudio e com chegada do ator apos o inicio da g" +
                    "ravacao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 129
 testRunner.Then("eu visualizo alerta de tempo de preparacao de elenco com sucesso - estudio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("49 - Validar o total de alertas gerados", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=131)]
        public virtual void _49_ValidarOTotalDeAlertasGerados()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("49 - Validar o total de alertas gerados", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 132
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 133
 testRunner.When("eu criar um roteiro em cada frente no mesmo dia", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 134
 testRunner.Then("eu visualizo o total de alertas gerados com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AlertasGROT(string casoDeTeste, string alerta, string cena1, string cena2, string cena3, string cena4, string cena5, string cena6, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "excluir_PlanejamentoRoteiro",
                    "logout"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alertas GROT", @__tags);
#line 137
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 138
 testRunner.Given(string.Format("que crie um planejamento de roteiro com as cenas {0}, {1}, {2}, {3}, {4}, {5}", cena1, cena2, cena3, cena4, cena5, cena6), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 139
 testRunner.When(string.Format("editar o horario do roteiro para o {0}", alerta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 140
 testRunner.Then(string.Format("visualizo a mensagem {0}", alerta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"01 - Visualizar alerta de antecedencia minima de gravacao com suce" +
            "sso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_01_VisualizarAlertaDeAntecedenciaMinimaDeGravacaoComSucesso()
        {
            this.AlertasGROT("\"01 - Visualizar alerta de antecedencia minima de gravacao com sucesso\"", "\"Antecedência mínima de gravação\"", "\"0500/001\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"02 - Visualizar alerta de tempo de preparacao de elenco com sucess" +
            "o\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_02_VisualizarAlertaDeTempoDePreparacaoDeElencoComSucesso()
        {
            this.AlertasGROT("\"02 - Visualizar alerta de tempo de preparacao de elenco com sucesso\"", "\"Tempo preparação de elenco\"", "\"0500/003\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"03 - Visualizar alerta de iluminacao com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_03_VisualizarAlertaDeIluminacaoComSucesso()
        {
            this.AlertasGROT("\"03 - Visualizar alerta de iluminacao com sucesso\"", "\"Iluminação\"", "\"0500/001\"", "\"\"", "\"\"", "\"0500/003\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"04 - Visualizar alerta de faixa de horario de gravacao com sucesso" +
            "\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_04_VisualizarAlertaDeFaixaDeHorarioDeGravacaoComSucesso()
        {
            this.AlertasGROT("\"04 - Visualizar alerta de faixa de horario de gravacao com sucesso\"", "\"Faixa de horário de gravação\"", "\"0500/001\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"05 - Visualizar alerta de tempo de caracterizacao do elenco com su" +
            "cesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_05_VisualizarAlertaDeTempoDeCaracterizacaoDoElencoComSucesso()
        {
            this.AlertasGROT("\"05 - Visualizar alerta de tempo de caracterizacao do elenco com sucesso\"", "\"Caracterização de elenco\"", "\"0500/003\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"06 - Visualizar alerta de indisponibilidade de elenco com sucesso\"" +
            "", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_06_VisualizarAlertaDeIndisponibilidadeDeElencoComSucesso()
        {
            this.AlertasGROT("\"06 - Visualizar alerta de indisponibilidade de elenco com sucesso\"", "\"Indisponibilidade de elenco\"", "\"0500/001\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"07 - Visualizar alerta de jornada da frente com sucesso - externa\"" +
            "", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_07_VisualizarAlertaDeJornadaDaFrenteComSucesso_Externa()
        {
            this.AlertasGROT("\"07 - Visualizar alerta de jornada da frente com sucesso - externa\"", "\"Jornada da frente\"", "\"0500/001\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"08 - Visualizar alerta de refeicao de elenco com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_08_VisualizarAlertaDeRefeicaoDeElencoComSucesso()
        {
            this.AlertasGROT("\"08 - Visualizar alerta de refeicao de elenco com sucesso\"", "\"Refeição de Elenco\"", "\"0500/001\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"09 - Visualizar alerta de tempo de deslocamento com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_09_VisualizarAlertaDeTempoDeDeslocamentoComSucesso()
        {
            this.AlertasGROT("\"09 - Visualizar alerta de tempo de deslocamento com sucesso\"", "\"Tempo de deslocamento\"", "\"0500/001\"", "\"\"", "\"\"", "\"0500/003\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"10 - Visualizar alerta de interjornada de elenco com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_10_VisualizarAlertaDeInterjornadaDeElencoComSucesso()
        {
            this.AlertasGROT("\"10 - Visualizar alerta de interjornada de elenco com sucesso\"", "\"Interjornada de elenco\"", "\"0500/003\"", "\"0500/004\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"11 - Visualizar alerta de conflito de horario de elenco com sucess" +
            "o\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_11_VisualizarAlertaDeConflitoDeHorarioDeElencoComSucesso()
        {
            this.AlertasGROT("\"11 - Visualizar alerta de conflito de horario de elenco com sucesso\"", "\"Conflito de horário de elenco\"", "\"0500/003\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"0500/004\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"12 - Visualizar alerta de multipla alocacao de ambiente com sucess" +
            "o\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_12_VisualizarAlertaDeMultiplaAlocacaoDeAmbienteComSucesso()
        {
            this.AlertasGROT("\"12 - Visualizar alerta de multipla alocacao de ambiente com sucesso\"", "\"Múltipla alocação do ambiente\"", "\"0500/003\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"0500/004\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"13 - Visualizar alerta de jornada de elenco com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_13_VisualizarAlertaDeJornadaDeElencoComSucesso()
        {
            this.AlertasGROT("\"13 - Visualizar alerta de jornada de elenco com sucesso\"", "\"Jornada de elenco\"", "\"0500/001\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"17 - Visualizar alerta de inconsistencia com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_17_VisualizarAlertaDeInconsistenciaComSucesso()
        {
            this.AlertasGROT("\"17 - Visualizar alerta de inconsistencia com sucesso\"", "\"Inconsistência\"", "\"0500/001\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"18 - Visualizar alerta de refeicao da equipe com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_18_VisualizarAlertaDeRefeicaoDaEquipeComSucesso()
        {
            this.AlertasGROT("\"18 - Visualizar alerta de refeicao da equipe com sucesso\"", "\"Refeição da equipe\"", "\"0500/001\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"20 - Visualizar alerta de jornada semanal de elenco com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_20_VisualizarAlertaDeJornadaSemanalDeElencoComSucesso()
        {
            this.AlertasGROT("\"20 - Visualizar alerta de jornada semanal de elenco com sucesso\"", "\"Jornada semanal do elenco (SEMANAL)\"", "\"0500/001\"", "\"0500/003\"", "\"0500/004\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"21 - Visualizar alerta de limite de dias de gravacao na semana da " +
            "frente com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_21_VisualizarAlertaDeLimiteDeDiasDeGravacaoNaSemanaDaFrenteComSucesso()
        {
            this.AlertasGROT("\"21 - Visualizar alerta de limite de dias de gravacao na semana da frente com suc" +
                    "esso\"", "\"Limite de Dias de Gravação na Semana da Frente (SEMANAL)\"", "\"0500/001\"", "\"0500/003\"", "\"0500/004\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"22 - Visualizar alerta de indisponibilidade do local com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_22_VisualizarAlertaDeIndisponibilidadeDoLocalComSucesso()
        {
            this.AlertasGROT("\"22 - Visualizar alerta de indisponibilidade do local com sucesso\"", "\"Indisponibilidade do local (SEMANAL)\"", "\"0500/001\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"23 - Visualizar alerta de indisponibilidade de frente de gravacao " +
            "com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_23_VisualizarAlertaDeIndisponibilidadeDeFrenteDeGravacaoComSucesso()
        {
            this.AlertasGROT("\"23 - Visualizar alerta de indisponibilidade de frente de gravacao com sucesso\"", "\"Indisponibilidade de frente de gravação (SEMANAL)\"", "\"0500/001\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"24 - Visualizar alerta de interjornada de frente com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_24_VisualizarAlertaDeInterjornadaDeFrenteComSucesso()
        {
            this.AlertasGROT("\"24 - Visualizar alerta de interjornada de frente com sucesso\"", "\"Interjornada de frente (SEMANAL)\"", "\"0500/001\"", "\"0500/003\"", "\"0500/004\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"25 - Visualizar alerta de limite de dias de gravacao na semana do " +
            "elenco com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_25_VisualizarAlertaDeLimiteDeDiasDeGravacaoNaSemanaDoElencoComSucesso()
        {
            this.AlertasGROT("\"25 - Visualizar alerta de limite de dias de gravacao na semana do elenco com suc" +
                    "esso\"", "\"Limite de Dias de Gravação na Semana do Elenco (SEMANAL)\"", "\"0500/001\"", "\"0500/003\"", "\"0500/004\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT, \"28 - Visualizar alerta de refeicao da equipe com sucesso - cenas c" +
            "urtas\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void AlertasGROT_28_VisualizarAlertaDeRefeicaoDaEquipeComSucesso_CenasCurtas()
        {
            this.AlertasGROT("\"28 - Visualizar alerta de refeicao da equipe com sucesso - cenas curtas\"", "\"Refeição da equipe\"", "\"0500/001\"", "\"\"", "\"\"", "\"0500/003\"", "\"0500/004\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void AlertasGROT_Estudio(string casoDeTeste, string alerta, string cena1, string cena2, string cena3, string cena4, string cena5, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "excluir_PlanejamentoRoteiro",
                    "logout"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alertas GROT - Estudio", @__tags);
#line 168
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 169
 testRunner.Given(string.Format("que crie um planejamento de roteiro com as cenas {0}, {1}, {2}, {3}, {4} de estud" +
                        "io", cena1, cena2, cena3, cena4, cena5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 170
 testRunner.When(string.Format("editar o horario do roteiro para o {0}", alerta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 171
 testRunner.Then(string.Format("visualizo a mensagem {0}", alerta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT - Estudio, \"14 - Visualizar alerta de metragem de estudio com sucess" +
            "o\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=174)]
        public virtual void AlertasGROT_Estudio_14_VisualizarAlertaDeMetragemDeEstudioComSucesso()
        {
            this.AlertasGROT_Estudio("\"14 - Visualizar alerta de metragem de estudio com sucesso\"", "\"Metragem de estúdio\"", "\"0502/003\"", "\"0502/004\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT - Estudio, \"15 - Visualizar alerta de incompatibilidade de cenarios " +
            "e ambientes com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=174)]
        public virtual void AlertasGROT_Estudio_15_VisualizarAlertaDeIncompatibilidadeDeCenariosEAmbientesComSucesso()
        {
            this.AlertasGROT_Estudio("\"15 - Visualizar alerta de incompatibilidade de cenarios e ambientes com sucesso\"" +
                    "", "\"Incompatibilidade de Cenarios e Ambientes\"", "\"0502/003\"", "\"0502/004\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alertas GROT - Estudio, \"16 - Visualizar alerta de MQE com sucesso\"", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=174)]
        public virtual void AlertasGROT_Estudio_16_VisualizarAlertaDeMQEComSucesso()
        {
            this.AlertasGROT_Estudio("\"16 - Visualizar alerta de MQE com sucesso\"", "\"MQE\"", "\"0502/003\"", "\"0502/004\"", "\"\"", "\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
