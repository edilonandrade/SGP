// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.SGP.Features.GROT._03_Bloco03._05_FrenteDeGravacao
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("05.02 - Carregamento das frentes padrão", new string[] {
            "kill_Driver"}, Description="Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero visualizar o carregamento da" +
        "s frentes padrão\r\n\tPara ter controle dos Capítulos e Cenas que serão roterizados" +
        "\r\n\r\nFora do escopo:\r\n\tTestes negativos", SourceFile="Features\\GROT\\03 - Bloco 03\\05 - Frente de gravação\\05.02 - CarregamentoDasFrente" +
        "sPadrao.feature", SourceLine=6)]
    public partial class _05_02_CarregamentoDasFrentesPadraoFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "05.02 - CarregamentoDasFrentesPadrao.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "05.02 - Carregamento das frentes padrão", "Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero visualizar o carregamento da" +
                    "s frentes padrão\r\n\tPara ter controle dos Capítulos e Cenas que serão roterizados" +
                    "\r\n\r\nFora do escopo:\r\n\tTestes negativos", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 17
#line 18
 testRunner.Given("que eu navegue para a Tela de Login do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 19
 testRunner.And("efetuar o login no sistema do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 20
 testRunner.And("que eu navegue para a Tela Home com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 21
 testRunner.And("que eu navegue para a Tela Capitulos e Cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01 - Carregamento de frente com GROT", new string[] {
                "chrome",
                "logout"}, SourceLine=23)]
        public virtual void _01_CarregamentoDeFrenteComGROT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Carregamento de frente com GROT", new string[] {
                        "chrome",
                        "logout"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 25
 testRunner.Given("que eu navegue para a Tela de Planejamento de Roteiros GROT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 26
 testRunner.When("eu desbloqueio a tela de planejamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 27
 testRunner.Then("eu visualizo os botoes de edicao e exclusao de frente com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02 - Carregamento de frente - Validar frente de gravação automaticamente", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=29)]
        public virtual void _02_CarregamentoDeFrente_ValidarFrenteDeGravacaoAutomaticamente()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Carregamento de frente - Validar frente de gravação automaticamente", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 31
 testRunner.When("eu clico em editar a frente tendo um roteiro criado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 32
 testRunner.Then("eu visualizo os parametros da frente disponiveis com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03 - Carregamento de frente - Alterar e validar parâmetros das frentes", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=34)]
        public virtual void _03_CarregamentoDeFrente_AlterarEValidarParametrosDasFrentes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Carregamento de frente - Alterar e validar parâmetros das frentes", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 35
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 36
 testRunner.When("eu clico em editar a frente tendo um roteiro criado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 37
 testRunner.Then("eu visualizo os parametros da frente disponiveis com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
