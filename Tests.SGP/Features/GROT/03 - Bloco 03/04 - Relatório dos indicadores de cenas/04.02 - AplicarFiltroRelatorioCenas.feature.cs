// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.SGP.Features.GROT._03_Bloco03._04_RelatorioDosIndicadoresDeCenas
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("04.02 - Aplicar filtro dentro do relatório de cenas", new string[] {
            "kill_Driver"}, Description="Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar aplicar filtros nos re" +
        "latorios de indicadores de cenas\r\n\tPara ter controle dos Capítulos e Cenas que s" +
        "erão roterizados\r\n\r\nFora do escopo:\r\n\tTestes negativos", SourceFile="Features\\GROT\\03 - Bloco 03\\04 - Relatório dos indicadores de cenas\\04.02 - Aplic" +
        "arFiltroRelatorioCenas.feature", SourceLine=6)]
    public partial class _04_02_AplicarFiltroDentroDoRelatorioDeCenasFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "04.02 - AplicarFiltroRelatorioCenas.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "04.02 - Aplicar filtro dentro do relatório de cenas", "Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar aplicar filtros nos re" +
                    "latorios de indicadores de cenas\r\n\tPara ter controle dos Capítulos e Cenas que s" +
                    "erão roterizados\r\n\r\nFora do escopo:\r\n\tTestes negativos", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 17
#line 18
 testRunner.Given("que eu navegue para a Tela de Login do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 19
 testRunner.And("efetuar o login no sistema do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 20
 testRunner.And("que eu navegue para a Tela Home com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 21
 testRunner.And("que eu navegue para a Tela Capitulos e Cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01 - Filtrar e Validar Cenas roteirizadas - Capítulo", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=23)]
        public virtual void _01_FiltrarEValidarCenasRoteirizadas_Capitulo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Filtrar e Validar Cenas roteirizadas - Capítulo", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 25
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 26
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 27
 testRunner.When("eu faco filtro por capitulo em cenas roteirizadas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 28
 testRunner.Then("eu visualizo o relatorio de cenas roteirizadas com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02 - Filtrar e Validar Cenas roteirizadas - Frente", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=30)]
        public virtual void _02_FiltrarEValidarCenasRoteirizadas_Frente()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Filtrar e Validar Cenas roteirizadas - Frente", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 32
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 33
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 34
 testRunner.When("eu faco filtro por frente em cenas roteirizadas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 35
 testRunner.Then("eu visualizo o relatorio de cenas roteirizadas com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03 - Filtrar e Validar Cenas roteirizadas - Data da cena e frente", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=37)]
        public virtual void _03_FiltrarEValidarCenasRoteirizadas_DataDaCenaEFrente()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Filtrar e Validar Cenas roteirizadas - Data da cena e frente", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 39
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 40
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 41
 testRunner.When("eu faco filtro por data da cena e frente em cenas roteirizadas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 42
 testRunner.Then("eu visualizo o relatorio de cenas roteirizadas com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("04 - Filtrar e Validar Cenas roteirizadas - Todos os filtros", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=44)]
        public virtual void _04_FiltrarEValidarCenasRoteirizadas_TodosOsFiltros()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - Filtrar e Validar Cenas roteirizadas - Todos os filtros", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 46
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 47
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 48
 testRunner.When("eu faco filtro por todos os filtros em cenas roteirizadas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 49
 testRunner.Then("eu visualizo o relatorio de cenas roteirizadas com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05 - Filtrar e Validar Cenas roteirizadas - Limpar Filtros", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=51)]
        public virtual void _05_FiltrarEValidarCenasRoteirizadas_LimparFiltros()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - Filtrar e Validar Cenas roteirizadas - Limpar Filtros", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 52
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 53
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 54
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 55
 testRunner.When("eu faco filtro por todos os filtros em cenas roteirizadas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 56
 testRunner.And("clico em limpar os filtros", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 57
 testRunner.Then("eu visualizo o relatorio de cenas roteirizadas com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("06 - Filtrar e Validar Frentes de Gravação - Frente e Dias", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=59)]
        public virtual void _06_FiltrarEValidarFrentesDeGravacao_FrenteEDias()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06 - Filtrar e Validar Frentes de Gravação - Frente e Dias", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 61
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 62
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 63
 testRunner.When("eu faco filtro por frente e dias em frente de gravacao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 64
 testRunner.Then("eu visualizo o relatorio de frente de gravacao com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("07 - Filtrar e Validar Quebra de Sequência Cênica - Número de quebras", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=66)]
        public virtual void _07_FiltrarEValidarQuebraDeSequenciaCenica_NumeroDeQuebras()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07 - Filtrar e Validar Quebra de Sequência Cênica - Número de quebras", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 67
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 68
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 69
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 70
 testRunner.When("eu acesso a quebra de sequencia cenica", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 71
 testRunner.Then("eu visualizo o numero de sequencias cenicas existentes com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("08 - Filtrar e Validar Cenas Roteirizadas por Artista - Artista", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=73)]
        public virtual void _08_FiltrarEValidarCenasRoteirizadasPorArtista_Artista()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08 - Filtrar e Validar Cenas Roteirizadas por Artista - Artista", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 74
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 75
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 76
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 77
 testRunner.When("eu faco filtro por artista em cenas roteirizadas por artista", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 78
 testRunner.Then("eu visualizo o relatorio de cenas roteirizadas por artista com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("09 - Filtrar e Validar Cenas Roteirizadas por Artista - Frente e Artista", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=80)]
        public virtual void _09_FiltrarEValidarCenasRoteirizadasPorArtista_FrenteEArtista()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09 - Filtrar e Validar Cenas Roteirizadas por Artista - Frente e Artista", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 81
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 82
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 83
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 84
 testRunner.When("eu faco filtro por frente e artista em cenas roteirizadas por artista", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 85
 testRunner.Then("eu visualizo o relatorio de cenas roteirizadas por artista com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("10 - Filtrar e Validar Troca de Ambiente e Iluminação - Frente", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=87)]
        public virtual void _10_FiltrarEValidarTrocaDeAmbienteEIluminacao_Frente()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10 - Filtrar e Validar Troca de Ambiente e Iluminação - Frente", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 88
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 89
 testRunner.Given("que eu crio um roteiro com tres cenas externas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 90
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 91
 testRunner.When("eu faco filtro por frente em troca de ambiente e iluminacao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 92
 testRunner.Then("eu visualizo o relatorio de troca de ambiente e iluminacao com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("11 - Filtrar e Validar Troca de Ambiente e Iluminação - Roteiro", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=94)]
        public virtual void _11_FiltrarEValidarTrocaDeAmbienteEIluminacao_Roteiro()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11 - Filtrar e Validar Troca de Ambiente e Iluminação - Roteiro", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 95
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 96
 testRunner.Given("que eu crio um roteiro com tres cenas externas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 97
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 98
 testRunner.When("eu faco filtro por Roteiro em troca de ambiente e iluminacao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 99
 testRunner.Then("eu visualizo o relatorio de troca de ambiente e iluminacao com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("12 - Filtrar e Validar Locações Externas - Tipo do Local", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=101)]
        public virtual void _12_FiltrarEValidarLocacoesExternas_TipoDoLocal()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12 - Filtrar e Validar Locações Externas - Tipo do Local", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 102
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 103
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 104
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 105
 testRunner.When("eu faco filtro por tipo do local em locacoes externas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 106
 testRunner.Then("eu visualizo o numero de locais existentes com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("13 - Filtrar e Validar Indicadores de Cenas - Indicadores das últimas soluções", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=108)]
        public virtual void _13_FiltrarEValidarIndicadoresDeCenas_IndicadoresDasUltimasSolucoes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13 - Filtrar e Validar Indicadores de Cenas - Indicadores das últimas soluções", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 109
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 110
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 111
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 112
 testRunner.When("eu acesso a aba de indicadores das ultimas solucoes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 113
 testRunner.Then("eu visualizo os indicadores das ultimas solucoes com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("14 - Filtrar e Validar Número de Roteiros - Tipo do Local", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=115)]
        public virtual void _14_FiltrarEValidarNumeroDeRoteiros_TipoDoLocal()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14 - Filtrar e Validar Número de Roteiros - Tipo do Local", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 116
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 117
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 118
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 119
 testRunner.When("eu faco filtro por tipo do local em numero de roteiros", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 120
 testRunner.Then("eu visualizo o numero de roteios existentes em numero de roteiros com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("15 - Filtrar e Validar Capítulos Fechados e Equivalentes - Data", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=122)]
        public virtual void _15_FiltrarEValidarCapitulosFechadosEEquivalentes_Data()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15 - Filtrar e Validar Capítulos Fechados e Equivalentes - Data", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 123
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 124
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 125
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 126
 testRunner.When("eu faco filtro por data em capitulos fechados e equivalentes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 127
 testRunner.Then("eu visualizo o relatorio de capitulos fechados e equivalentes com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("16 - Filtrar e Validar Elenco - Artista", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=129)]
        public virtual void _16_FiltrarEValidarElenco_Artista()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16 - Filtrar e Validar Elenco - Artista", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 130
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 131
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 132
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 133
 testRunner.When("eu faco filtro por artista em elenco", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 134
 testRunner.Then("eu visualizo o relatorio de elenco com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("17 - Filtrar e Validar Elenco - Data e Artista", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=136)]
        public virtual void _17_FiltrarEValidarElenco_DataEArtista()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("17 - Filtrar e Validar Elenco - Data e Artista", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 137
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 138
 testRunner.Given("que eu crio um roteiro com uma cena externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 139
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 140
 testRunner.When("eu faco filtro por data e artista em elenco", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 141
 testRunner.Then("eu visualizo o relatorio de elenco por data com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("18 - Filtrar e Validar Montagem - Todos os filtros", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "logout"}, SourceLine=143)]
        public virtual void _18_FiltrarEValidarMontagem_TodosOsFiltros()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("18 - Filtrar e Validar Montagem - Todos os filtros", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "logout"});
#line 144
this.ScenarioSetup(scenarioInfo);
#line 17
this.FeatureBackground();
#line 145
 testRunner.Given("que eu crio um roteiro com duas cenas de estudio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 146
 testRunner.And("acesso o relatorio dos indicadores de cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 147
 testRunner.When("eu faco filtro por todos os campos em montagem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 148
 testRunner.Then("eu visualizo o relatorio de montagem com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
