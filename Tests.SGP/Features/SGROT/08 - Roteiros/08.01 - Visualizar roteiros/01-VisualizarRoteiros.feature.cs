// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.SGP.Features.SGROT._08_Roteiros._08_01_VisualizarRoteiros
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("08.01 - Visualizar roteiro", new string[] {
            "kill_Driver"}, Description="Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar um novo Capítulo no SG" +
        "P\r\n\tPara ter controle dos Capítulos e Cenas que serão roterizados\r\n\r\nFora do esc" +
        "opo:\r\n\tTestes negativos", SourceFile="Features\\SGROT\\08 - Roteiros\\08.01 - Visualizar roteiros\\01-VisualizarRoteiros.fe" +
        "ature", SourceLine=7)]
    public partial class _08_01_VisualizarRoteiroFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "01-VisualizarRoteiros.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "08.01 - Visualizar roteiro", "Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar um novo Capítulo no SG" +
                    "P\r\n\tPara ter controle dos Capítulos e Cenas que serão roterizados\r\n\r\nFora do esc" +
                    "opo:\r\n\tTestes negativos", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 18
#line 19
 testRunner.Given("que eu navegue para a Tela de Login do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 20
 testRunner.And("efetuar o login no sistema do SGP com perfil sem GROT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 21
 testRunner.And("que eu navegue para a Tela Home com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 22
 testRunner.When("eu criar um novo capitulo com decupagem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 23
 testRunner.And("eu decupar uma cena", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01 - Visualizar status do roteiro para liberado com sucesso", new string[] {
                "chrome",
                "excluir_PlanejamentoRoteiro",
                "excluir_NovoCapitulo",
                "logout"}, SourceLine=25)]
        public virtual void _01_VisualizarStatusDoRoteiroParaLiberadoComSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Visualizar status do roteiro para liberado com sucesso", new string[] {
                        "chrome",
                        "excluir_PlanejamentoRoteiro",
                        "excluir_NovoCapitulo",
                        "logout"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 27
 testRunner.Given("que eu esteja com planejamento de roteiro realizado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 28
 testRunner.When("navego para roteiro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 29
 testRunner.Then("visualizo status do roteiro roteirizada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02 - Visualizar status do roteiro para fechado com sucesso", new string[] {
                "chrome",
                "alterar_StatusRoteiro",
                "excluir_PlanejamentoRoteiro",
                "excluir_NovoCapitulo",
                "logout"}, SourceLine=31)]
        public virtual void _02_VisualizarStatusDoRoteiroParaFechadoComSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Visualizar status do roteiro para fechado com sucesso", new string[] {
                        "chrome",
                        "alterar_StatusRoteiro",
                        "excluir_PlanejamentoRoteiro",
                        "excluir_NovoCapitulo",
                        "logout"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 33
 testRunner.Given("que eu esteja com planejamento de roteiro realizado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 34
 testRunner.And("atualizo status das cenas para gravado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 35
 testRunner.When("navego para roteiro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 36
 testRunner.Then("visualizo status do roteiro gravada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03 - Visualizar status do roteiro para fechado a parte com sucesso", new string[] {
                "chrome",
                "alterar_StatusRoteiro",
                "excluir_PlanejamentoRoteiro",
                "excluir_NovoCapitulo",
                "logout"}, SourceLine=38)]
        public virtual void _03_VisualizarStatusDoRoteiroParaFechadoAParteComSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Visualizar status do roteiro para fechado a parte com sucesso", new string[] {
                        "chrome",
                        "alterar_StatusRoteiro",
                        "excluir_PlanejamentoRoteiro",
                        "excluir_NovoCapitulo",
                        "logout"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 40
 testRunner.Given("que eu esteja com planejamento de roteiro realizado com duas cenas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 41
 testRunner.And("atualizo status das cenas para fechado a parte", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 42
 testRunner.When("navego para roteiro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 43
 testRunner.Then("visualizo status do roteiro gravada a parte", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
