// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.SGP.Features.SGROT._04_Cenarios._04_03_FiltrosDeCenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("04.03 - Filtro de cenarios", new string[] {
            "kill_Diver"}, Description="Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar um novo Cenário no SGP" +
        "\r\n\tPara ter controle dos Cenários que serão manipulados\r\n\t\r\nFora de escopo:\r\n\tTe" +
        "stes negativos", SourceFile="Features\\SGROT\\04 - Cenários\\04.03 - Filtros de cenários\\05-FiltrosCenarios.featu" +
        "re", SourceLine=7)]
    public partial class _04_03_FiltroDeCenariosFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "05-FiltrosCenarios.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "04.03 - Filtro de cenarios", "Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar um novo Cenário no SGP" +
                    "\r\n\tPara ter controle dos Cenários que serão manipulados\r\n\t\r\nFora de escopo:\r\n\tTe" +
                    "stes negativos", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Diver"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 18
#line 19
 testRunner.Given("que eu navegue para a Tela de Login do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 20
 testRunner.And("efetuar o login no sistema do SGP com perfil sem GROT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 21
 testRunner.And("que eu navegue para a Tela Home com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01 - Validar pesquisa - Apenas 1 cenario", new string[] {
                "chrome",
                "excluir_NovoCenario"}, SourceLine=23)]
        public virtual void _01_ValidarPesquisa_Apenas1Cenario()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Validar pesquisa - Apenas 1 cenario", new string[] {
                        "chrome",
                        "excluir_NovoCenario"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 25
 testRunner.Given("que eu criar um novo cenario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 26
 testRunner.When("filtrar por cenario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 27
 testRunner.Then("visualizo cenario filtrado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02 - Validar pesquisa - Mais de 2 cenarios", new string[] {
                "chrome",
                "excluir_NovoCenario"}, SourceLine=29)]
        public virtual void _02_ValidarPesquisa_MaisDe2Cenarios()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Validar pesquisa - Mais de 2 cenarios", new string[] {
                        "chrome",
                        "excluir_NovoCenario"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 31
 testRunner.Given("que eu criar dois cenarios", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 32
 testRunner.When("filtrar dois cenarios", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 33
 testRunner.Then("visualizo os dois cenario filtrados com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03 - Validar pesquisa - Por ambiente", new string[] {
                "chrome",
                "excluir_NovoCenario"}, SourceLine=35)]
        public virtual void _03_ValidarPesquisa_PorAmbiente()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Validar pesquisa - Por ambiente", new string[] {
                        "chrome",
                        "excluir_NovoCenario"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 37
 testRunner.Given("que eu criar um novo cenario com ambiente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 38
 testRunner.When("filtrar por ambiente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 39
 testRunner.Then("visualizo cenario filtrado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("04 - Validar pesquisa - Por tipo cidade cenografica", new string[] {
                "chrome",
                "excluir_NovoCenario"}, SourceLine=41)]
        public virtual void _04_ValidarPesquisa_PorTipoCidadeCenografica()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - Validar pesquisa - Por tipo cidade cenografica", new string[] {
                        "chrome",
                        "excluir_NovoCenario"});
#line 42
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 43
 testRunner.Given("que eu criar um novo cenario cidade cenografica", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 44
 testRunner.When("filtrar por tipo - cidade cenografica", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 45
 testRunner.Then("visualizo cenario filtrado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05 - Validar pesquisa - Por tipo estudio", new string[] {
                "chrome",
                "excluir_NovoCenario"}, SourceLine=47)]
        public virtual void _05_ValidarPesquisa_PorTipoEstudio()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - Validar pesquisa - Por tipo estudio", new string[] {
                        "chrome",
                        "excluir_NovoCenario"});
#line 48
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 49
 testRunner.Given("que eu criar um novo cenario estudio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 50
 testRunner.When("filtrar por tipo - estudio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 51
 testRunner.Then("visualizo cenario filtrado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("06 - Validar pesquisa - Por tipo locacao", new string[] {
                "chrome",
                "excluir_NovoCenario"}, SourceLine=53)]
        public virtual void _06_ValidarPesquisa_PorTipoLocacao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06 - Validar pesquisa - Por tipo locacao", new string[] {
                        "chrome",
                        "excluir_NovoCenario"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 55
 testRunner.Given("que eu criar um novo cenario tipo externo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 56
 testRunner.When("filtrar por tipo - externa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 57
 testRunner.Then("visualizo cenario filtrado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
