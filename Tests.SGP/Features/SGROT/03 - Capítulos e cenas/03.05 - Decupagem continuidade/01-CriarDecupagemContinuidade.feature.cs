// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.SGP.Features.SGROT._03_CapitulosECenas._03_05_DecupagemContinuidade
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("03.05 - Criar decupagem de continuidade", new string[] {
            "kill_Driver"}, Description="Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar um novo Cenário no SGP" +
        "\r\n\tPara ter controle dos Cenários que serão manipulados\r\n\t\r\nFora de escopo:\r\n\tTe" +
        "stes negativos", SourceFile="Features\\SGROT\\03 - Capítulos e cenas\\03.05 - Decupagem continuidade\\01-CriarDecu" +
        "pagemContinuidade.feature", SourceLine=7)]
    public partial class _03_05_CriarDecupagemDeContinuidadeFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "01-CriarDecupagemContinuidade.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "03.05 - Criar decupagem de continuidade", "Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar um novo Cenário no SGP" +
                    "\r\n\tPara ter controle dos Cenários que serão manipulados\r\n\t\r\nFora de escopo:\r\n\tTe" +
                    "stes negativos", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 18
#line 19
 testRunner.Given("que eu navegue para a Tela de Login do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 20
 testRunner.And("efetuar o login no sistema do SGP com perfil sem GROT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 21
 testRunner.And("que eu navegue para a Tela Home com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 22
 testRunner.And("que eu criar um capitulo com decupagem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 23
 testRunner.When("eu decupar uma cena", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01 - Criar decupagem de continuidade de cena de um capitulo", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "excluir_Roupas",
                "logout"}, SourceLine=25)]
        public virtual void _01_CriarDecupagemDeContinuidadeDeCenaDeUmCapitulo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Criar decupagem de continuidade de cena de um capitulo", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "excluir_Roupas",
                        "logout"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 27
 testRunner.Given("que eu navegue para a Tela de Decupagem Continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 28
 testRunner.When("criar uma decupagem de continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 29
 testRunner.Then("visualizo decupagem de continuidade realizada com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02 - Criar decupagem de continuidade - incluir pesonagem", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "excluir_Roupas",
                "logout"}, SourceLine=31)]
        public virtual void _02_CriarDecupagemDeContinuidade_IncluirPesonagem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Criar decupagem de continuidade - incluir pesonagem", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "excluir_Roupas",
                        "logout"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 33
 testRunner.Given("que eu navegue para a Tela de Decupagem Continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 34
 testRunner.When("criar uma decupagem de continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 35
 testRunner.And("incluir personagem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 36
 testRunner.Then("visualizo decupagem de continuidade com personagem incluido com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03 - Criar decupagem de continuidade - reaproveitar roupa", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "excluir_Roupas",
                "logout"}, SourceLine=38)]
        public virtual void _03_CriarDecupagemDeContinuidade_ReaproveitarRoupa()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Criar decupagem de continuidade - reaproveitar roupa", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "excluir_Roupas",
                        "logout"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 40
 testRunner.Given("que eu navegue para a Tela de Decupagem Continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 41
 testRunner.When("criar uma decupagem de continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 42
 testRunner.And("reaproveitar roupa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 43
 testRunner.Then("visualizo decupagem de continuidade com roupa reaproveitada com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("04 - Criar decupagem de continuidade - excluir personagem", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "excluir_Roupas",
                "logout"}, SourceLine=45)]
        public virtual void _04_CriarDecupagemDeContinuidade_ExcluirPersonagem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - Criar decupagem de continuidade - excluir personagem", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "excluir_Roupas",
                        "logout"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 47
 testRunner.Given("que eu navegue para a Tela de Decupagem Continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 48
 testRunner.When("criar uma decupagem de continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 49
 testRunner.And("excluir personagem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 50
 testRunner.Then("visualizo exclusao de personagem com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05 - Criar decupagem de continuidade - abrir letra", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "excluir_Roupas",
                "logout"}, SourceLine=52)]
        public virtual void _05_CriarDecupagemDeContinuidade_AbrirLetra()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - Criar decupagem de continuidade - abrir letra", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "excluir_Roupas",
                        "logout"});
#line 53
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 54
 testRunner.Given("que eu navegue para a Tela de Decupagem Continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 55
 testRunner.When("criar uma decupagem de continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 56
 testRunner.And("abrir letra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 57
 testRunner.Then("visualizo abertura de letra com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("07 - Criar decupagem de continuidade - consultar roupa", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "excluir_Roupas",
                "logout"}, SourceLine=66)]
        public virtual void _07_CriarDecupagemDeContinuidade_ConsultarRoupa()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07 - Criar decupagem de continuidade - consultar roupa", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "excluir_Roupas",
                        "logout"});
#line 67
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 68
 testRunner.Given("que eu navegue para a Tela de Decupagem Continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 69
 testRunner.When("criar uma decupagem de continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 70
 testRunner.And("consultar roupa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 71
 testRunner.Then("visualizo roupa selecionada com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("11 - Criar decupagem de continuidade - imprimir pdf", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "excluir_Roupas",
                "logout"}, SourceLine=73)]
        public virtual void _11_CriarDecupagemDeContinuidade_ImprimirPdf()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11 - Criar decupagem de continuidade - imprimir pdf", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "excluir_Roupas",
                        "logout"});
#line 74
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 75
 testRunner.Given("que eu navegue para a Tela de Decupagem Continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 76
 testRunner.When("criar uma decupagem de continuidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 77
 testRunner.And("imprimir texto em pdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 78
 testRunner.Then("visualizo impressao do pdf com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
