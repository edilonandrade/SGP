// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.SGP.Features.SGROT._03_CapitulosECenas._03_03_DecupagemBasica
{
    using TechTalk.SpecFlow;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("03.03 - Criar decupagem basica", new string[] {
            "kill_Driver"}, Description = "Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar um novo Capítulo no SG" +
        "P\r\n\tPara ter controle dos Capítulos e Cenas que serão roterizados\r\n\t\r\nFora de es" +
        "copo:\r\n\tTestes negativos", SourceFile = "Features\\SGROT\\03 - Capítulos e cenas\\03.03 - Decupagem basica\\01-CriarDecupagemB" +
        "asica.feature", SourceLine = 7)]
    public partial class _03_03_CriarDecupagemBasicaFeature
    {

        private TechTalk.SpecFlow.ITestRunner testRunner;

#line 1 "01-CriarDecupagemBasica.feature"
#line hidden

        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "03.03 - Criar decupagem basica", "Narrativa:\r\n\tEu como adminstrador do sistema\r\n\tQuero criar um novo Capítulo no SG" +
                    "P\r\n\tPara ter controle dos Capítulos e Cenas que serão roterizados\r\n\t\r\nFora de es" +
                    "copo:\r\n\tTestes negativos", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver"});
            testRunner.OnFeatureStart(featureInfo);
        }

        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        public virtual void TestInitialize()
        {
        }

        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        public virtual void FeatureBackground()
        {
#line 18
#line 19
            testRunner.Given("que eu navegue para a Tela de Login do SGP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 20
            testRunner.And("efetuar o login no sistema do SGP com perfil sem GROT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 21
            testRunner.And("que eu navegue para a Tela Home com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 22
            testRunner.And("que eu criar um novo capitulo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }

        [TechTalk.SpecRun.ScenarioAttribute("01 - Cena salva com sucesso", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "logout"}, SourceLine = 24)]
        public virtual void _01_CenaSalvaComSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Cena salva com sucesso", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "logout"});
#line 25
            this.ScenarioSetup(scenarioInfo);
#line 18
            this.FeatureBackground();
#line 26
            testRunner.Given("que eu esteja com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 27
            testRunner.And("que eu navegue para a Tela de Decupagem Basica", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 28
            testRunner.When("eu decupar uma cena", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 29
            testRunner.Then("eu visualizo a Cena criada com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }

        [TechTalk.SpecRun.ScenarioAttribute("02 - Criar novo cenario ambiente", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "excluir_NovoCenario",
                "logout"}, SourceLine = 31)]
        public virtual void _02_CriarNovoCenarioAmbiente()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Criar novo cenario ambiente", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "excluir_NovoCenario",
                        "logout"});
#line 32
            this.ScenarioSetup(scenarioInfo);
#line 18
            this.FeatureBackground();
#line 33
            testRunner.Given("que eu esteja com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 34
            testRunner.When("eu criar um novo cenario ambiente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 35
            testRunner.And("utilizar novo cenario e ambiente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 36
            testRunner.Then("eu visualizo cenario ambiente criados com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }

        [TechTalk.SpecRun.ScenarioAttribute("03 - Criar abertura letra", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "logout"}, SourceLine = 38)]
        public virtual void _03_CriarAberturaLetra()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Criar abertura letra", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "logout"});
#line 39
            this.ScenarioSetup(scenarioInfo);
#line 18
            this.FeatureBackground();
#line 40
            testRunner.Given("que eu esteja com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 41
            testRunner.When("eu criar abertura de letra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 42
            testRunner.Then("eu visualizo abertura de letra criada com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }

        [TechTalk.SpecRun.ScenarioAttribute("04 - Abrir letra cena decupada", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "logout"}, SourceLine = 44)]
        public virtual void _04_AbrirLetraCenaDecupada()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - Abrir letra cena decupada", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "logout"});
#line 45
            this.ScenarioSetup(scenarioInfo);
#line 18
            this.FeatureBackground();
#line 46
            testRunner.Given("que eu esteja com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 47
            testRunner.When("eu abrir letra com cena decupada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 48
            testRunner.Then("eu visualizo abertura de letra realizada com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }

        [TechTalk.SpecRun.ScenarioAttribute("05 - Criar cena secreta", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "logout"}, SourceLine = 50)]
        public virtual void _05_CriarCenaSecreta()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - Criar cena secreta", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "logout"});
#line 51
            this.ScenarioSetup(scenarioInfo);
#line 18
            this.FeatureBackground();
#line 52
            testRunner.Given("que eu esteja com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 53
            testRunner.When("eu criar uma cena secreta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 54
            testRunner.Then("visualizo cena criada com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }

        [TechTalk.SpecRun.ScenarioAttribute("06 - Criar novo personagem", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "excluir_NovoPersonagem",
                "logout"}, SourceLine = 56)]
        public virtual void _06_CriarNovoPersonagem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06 - Criar novo personagem", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "excluir_NovoPersonagem",
                        "logout"});
#line 57
            this.ScenarioSetup(scenarioInfo);
#line 18
            this.FeatureBackground();
#line 58
            testRunner.Given("que eu esteja com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 59
            testRunner.When("eu criar um novo personagem na tela de decupagem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 60
            testRunner.Then("eu visualizo personagem criado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }

        [TechTalk.SpecRun.ScenarioAttribute("07 - Criar novo personagem e nova indisponibilidade", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "excluir_NovoPersonagem",
                "logout"}, SourceLine = 62)]
        public virtual void _07_CriarNovoPersonagemENovaIndisponibilidade()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07 - Criar novo personagem e nova indisponibilidade", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "excluir_NovoPersonagem",
                        "logout"});
#line 63
            this.ScenarioSetup(scenarioInfo);
#line 18
            this.FeatureBackground();
#line 64
            testRunner.Given("que eu esteja com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 65
            testRunner.When("eu criar um novo personagem e nova indisponibilidade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 66
            testRunner.Then("eu visualizo personagem e indisponibilidade criados com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }

        [TechTalk.SpecRun.ScenarioAttribute("08 - Salvar decupar proxima cena", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "logout"}, SourceLine = 68)]
        public virtual void _08_SalvarDecuparProximaCena()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08 - Salvar decupar proxima cena", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "logout"});
#line 69
            this.ScenarioSetup(scenarioInfo);
#line 18
            this.FeatureBackground();
#line 70
            testRunner.Given("que eu esteja com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 71
            testRunner.When("eu decupar a proxima cena", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 72
            testRunner.Then("eu visualizo cena decupada com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }

        [TechTalk.SpecRun.ScenarioAttribute("09 - Anexar capitulo", new string[] {
                "chrome",
                "excluir_NovoCapitulo",
                "logout"}, SourceLine = 74)]
        public virtual void _09_AnexarCapitulo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09 - Anexar capitulo", new string[] {
                        "chrome",
                        "excluir_NovoCapitulo",
                        "logout"});
#line 75
            this.ScenarioSetup(scenarioInfo);
#line 18
            this.FeatureBackground();
#line 76
            testRunner.Given("que eu esteja com a programacao selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 78
            testRunner.Then("eu visualizo um capitulo criado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }

        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
